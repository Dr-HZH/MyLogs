"""
Django settings for MyLogs project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path

from sshtunnel import open_tunnel

# Build paths inside the project like this: BASE_DIR / 'subdir'.

BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-xsxpyoegt7b!ru9w)zx+-g)2166+m=v@4r!0ovzi=ffs-ft%65'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'plogs'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'MyLogs.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 定义模板引擎，用于识别模板里面的变量和指令。内置模板引擎有Django Templates和jinja2.Jinja2,每个模板引擎都有自己的变量和指令语法。
        # 注册根目录和index的templates文件夹
        'DIRS': [os.path.join(BASE_DIR, 'templates',
                              BASE_DIR, 'index/templates')],  # 设置模板文件路径，每个模板引擎都有自己的变量和指令语法。
        'APP_DIRS': True,  # 是否在App里查找模板文件
        'OPTIONS': {  # 用于填充在RequestContext的上下文（模板里面的变量和指令），一般情况下不做修改
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]
WSGI_APPLICATION = 'MyLogs.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
ssh_host = '192.168.33.06'
ssh_port = 22
ssh_user = 'root'
ssh_password = '123456'

mysql_host = 'localhost'
mysql_port = 3306
mysql_user = 'root'
mysql_passwd = '123456'
mysql_database = 'Django_Database'

# def get_ssh():
#     server = open_tunnel(
#         (ssh_host, ssh_port),
#         ssh_username=ssh_user,
#         ssh_password=ssh_password,
#         # 绑定服务器的MySQL数据库
#         remote_bind_address=(mysql_host, mysql_port))  # remote_bind_address是绑定服务器的MySQL数据库
#     # ssh通道服务启动
#     server.start()
#     return str(server.local_bind_port)


DATABASES = {
    'default': {
        "ENGINE": 'django.db.backends.mysql',
        'NAME': mysql_database,
        'USER': mysql_user,
        'password': mysql_passwd,
        'Host': mysql_host,
        'Port': 3306,
        'OPTIONS': {'read_default_file': str(BASE_DIR / 'my.cnf')}
    },
    # 'MySQLDatabase': {
    #     "ENGINE": 'django.db.backends.mysql',
    #     'NAME': mysql_database,
    #     'USER': mysql_user,
    #     'password': mysql_passwd,
    #     'Host': mysql_host,
    #     'Port': get_ssh(),
    #     'OPTIONS': {'read_default_file': str(BASE_DIR / 'my.cnf')}
    # },
    'MYSqlite3': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

# # Static files (CSS, JavaScript, Images)。
# # 静态资源的路由地址：通过浏览器访问Django的静态资源。查找功能由App列表——INSTALLED_APPS——staticfiles
STATIC_URL = '/static/'
# # 设置根目录的静态资源文件夹static
STATICFILES_DIRS = [BASE_DIR / 'static',
                    # 设置App(index)的静态资源文件夹Mystatic
                    BASE_DIR / 'plogs//Mystatic', ]
# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 媒体资源配置
# 设置媒体路由地址信息
MEDIA_URL = '/media/'
# 获取media文件夹的完整路径信息
MEDIA_ROOT = BASE_DIR / 'media'
